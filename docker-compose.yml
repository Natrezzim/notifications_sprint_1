services:

  service:
    container_name: notification_api
    build:
      context: api/src/app
      dockerfile: ./Dockerfile
    ports:
      - 8010
    env_file:
      - env/.env
    depends_on:
      - db
      
  db:
    container_name: notification_db
    image: postgres:12.0-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - env/.env
      
  admin:
    container_name: notification_admin
    build:
      context: ./admin
      dockerfile: ./Dockerfile
    env_file:
      - env/.env
    ports:
      - 8000
    volumes:
      - static_volume:/usr/src/static/
    depends_on:
      - db

  nginx:
    container_name: notification_nginx
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    ports:
      - 80:80
    volumes:
      - nginx:/var/log/nginx/
      - static_volume:/usr/src/static/
    depends_on:
      - service
      - admin

  rabbitmq:
    image: rabbitmq:3.10.5-management-alpine
    container_name: notification_rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    env_file:
      - env/.env

  worker_chunk:
    container_name: worker_chunk
    build:
      context: worker/
      dockerfile: ./Dockerfile
    env_file:
      - env/.env
    depends_on:
      - db
      - rabbitmq
    entrypoint: 'python3 /usr/local/bin/worker/chunk_user_group.py'

  worker_send_email:
    container_name: worker_send_email
    build:
      context: worker/
      dockerfile: ./Dockerfile
    env_file:
      - env/.env
    depends_on:
      - db
      - rabbitmq
    entrypoint: 'python3 /usr/local/bin/worker/send_email.py'

  scheduler:
    container_name: scheduler
    build:
      context: scheduler/
      dockerfile: ./Dockerfile
    depends_on:
      - db
      - service
    entrypoint: 'python3 /usr/local/bin/scheduler/main.py'


volumes:
  nginx:
  postgres_data:
  rabbitmq_data:
  static_volume:
